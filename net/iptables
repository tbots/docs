
 The Linux kernel's network subsystem called Netfilter. iptables(8), and ip6tables(8) tools provide an interface to configure, maintain, and inspet the tables of IPv4 and
 IPv6 packet filter rules in the Linux kernel. The iptables architecture groups network packet processing rules into tables by function. Each table contains a number of built-in chains, sequences
 of processing rules, and may also contain user-defined chains. Rules consist of matches and targets that specify what to do with the packet that matched; target may be also a jump to a
 user-defined chain in the same table. 

 A firewall rule specifies criteria for a packet and a target. If the packet does not match, the next rule in the chain is examined; if it does match, then the next rule is specified by
 the value of the target, one of the targets described in iptables-extensions(8), or one of the special values ACCEPT, DROP or RETURN.

	Table		Function												Chain
	-----		--------												-----
	
	Filter		Packet filtering/firewall			INPUT, FORWARD, OUTPUT
	
	NAT				Network address translation		PREROUTING,INPUT,OUTPUT,POSTROUTING

	Mangle  	Packet modification						PREROUTING,INPUT,FORWARD,OUTPUT,POSTROUTING

	Security	Mandatory Access Control			INPUT,FORWARD,OUTPUT

	Raw				Bypass "conntrack" for				PREROUTING, OUTPUT
						corner cases
						

 iptables operate on the layer three of OSI model, ebtables designed as firewall for the layer two filtering.


 --append  -A chain			Append to chain
 --check   -C chain			Check for the existence of a rule
 --delete  -D chain			Delete matching rule from chain
 --delete  -D chain rulenum
 												Delete rule rulenum from the chain
 --flush   -F [chain]	 Delete all rules in chain or all chains
 --policy  -P chain policy
 												Change policy on chain to target
 --list -L [chain [rulenum]]		list the rules in the chain or all chains
 --list-rules -S [chain [rulenum]]
 											  Print the rules in a chain or all chains
 --match  -m match			Extended match (see iptables-extensions(8)
 --numeric, -n					Numeric output of addresses and ports
 --table  -t table			table to manipulate (default: 'filter')
 --delete-chain  -X [chain]
 												Delete a user-defined chain
 -jump -j target				target for rule (may load target extension)

 --in-interafce, -i <input_interface> 
                        network interface name ([+] for wildcard)

 --out-interface -o <output_interface>
                        network interface name ([+] for wildcard)

 --protocol, -p <protocol>
                        protocol by number or name

 [MODULES]
  tcp
  state

  iptables -m tcp -h 	# get help on the module


 Examples:
  iptables --list --numeric --list [chain[rulenum]]
	iptables -P INPUT DROP
 	iptables --append CHAIN --in-interface <ifname> --jump ACCEPT
 	# lo - loopback interface
  iptables -A INPUT -i + -j ACCEPT  # + - accept on all the interfaces
  iptables --append INPUT --protocol tcp --match tcp --destination-port 22 --in-interface eth0 --jump ACCEPT
 	iptables-save > /etc/iptables.save
 	iptables-restore <filename>

  # Allow ssh connection:
   
 Tools:
 	firewalld (controls iptabes)
