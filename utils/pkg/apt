
 Configuration.

  apt.conf is the main configuration file for the APT suite of tools, all tools make use of the configuration file and a common
	command-line parser to provide a uniform environment. When an APT tool starts up it will read the configuration specified by
	the APT_CONFIG environment variable (if any) and then read the files in Dir::Etc::Parts, then read the main configuration file
	specified by Dir::Etc::main then finally apply the command-line options to override the configuration directives, possibly 
	loading even more config files. 

	The configuration file is organized in a tree with options organized into functional groups. Option specification is given with a
	double colon notation, starting from a tool group, tool name, and an option name. Options do not inherit from their parent groups.

	Syntacticly, the configuration language is modeled after what the ISC tools use. Lines starting with `//` are treated as comments
	and ignored till the end of a line. Each line is of the form:

	APT::Get::Assume-Yes "true";		// trailing semicolon is required and the quotes are optional

	APT { Get { Assume-Yes "true"; Fix-Broken "true"; }; };		// scoping several options; newlines are allowed for readibility

	RPM::Allow-Dublicated { "kerner";								// passing a list
												  "kernel-smp";
												};

 Check /usr/share/doc/apt/examples/{apt.conf,configure-index.gz}. 

 Two specials are allowed, `#include` and `#clear`, the first will include the given file, unless the filename ends in a slash,
 in which case the whole directory is included, the second is used to erase a list of names.

 All of the APT tools take a -o option which allows an arbitrary configuration directive to specified on the command line. The 
 syntax is a full name of the configuration item (see man page of the specific tool for a details), followed by an equal sign, then
 the new value of the option. Lists can be appended too, by adding a trailing :: to the list name. Probably `-o RPM::Allow-Duplicated=..` dunno..

 [!] Command line options should be specified before a package name.
 [!] If package requires (depends) installation of another package then the prompt is issued. 

 [!!] Try to figure out how APT_CONFIG variable is triggered


APT REPOSITORIES

(https://wiki.debian.org/SourcesList)


Repositories specification found in the following location:
 /etc/apt/soucres.list
 /etc/apt/soucres.list.d

The entries follow the format:

 <archive> <url> <distribution> [component1 [component2 [component3]]]

The first word on each line, deb or deb-src, indicates the type of the archive. "deb", short for the "Debian
package", indicates that the archive contains binary packages, the pre-compiled packages (the most commonly
used). "deb-src" indicates source packages, which are the original program sources plus the Debian control
file (.dsc) and the diff.gz containing the changes needed for packaging the program.

Next repository URL follows (https://wiki.debian.org/DebianRepository)

The 'distribution' can be either release code name (alias) or the release class respectively. 

Copmonent is on of the:

 main     consists of DFSG-copmliant packages which do not rely on software outside this area to operate; these are the only
          packages considered part of the Debian distribution

 contrib  contain DFSG-compliant software, but have dependencies not in main (possible packaged for Debian in non-free)

 non-free contains software that does not copmly with the DFSG


