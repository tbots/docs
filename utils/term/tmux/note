 
 In tmux, a session is displayed on screen by a client and all sessions are managed by a single server. The server and each client are separate processes 
 which communicate through a socket in /tmp.  

 Examples:

  tmux new-session -s docker  # create new session names docker
  tmux new-session -d -s ansible    # create session in detached mode
  tmux new-window -t <session:window> -a -n ssh   
  # or neww, insert new window at the next index from the target-window,
  # moving up windows if necessary; DO NOT use index, use window name instead to
  # specify a target window

  tmux new -A -s ex       # attach or create session ex; no error if session already exists
 Creating a new window.

		
 Splitting windows:

	 split-window [-bdhvP] [-c start-directory] [-l size | -p percentage] [-t target-pane] [shell-command] [-F format]
      (alias: splitw)

   Create a new pane by splitting target-pane. -h is for horizontal split and -v a vertical split; if neither specified, -v is assumed.
		DESCRIBE_ME

	 source-file

 
 Configuration file options

   To see all the options: `tmux show-options -g`.
    

   bind
	 set-option

	 allow-rename
   status-bg
   status-fg
   
   status-left
   status-right

   
 Setting options examples:
  
   set status-style bg=black,fg=green
 


 Key bindings

 !				Break the current pane out of the window.
 "				Split the current pane into two, top and bottom.
 %				Split the current pane into two, left and right.

 $				Rename current session.
 ,				Rename the current window.

 '				Prompt for a window index to select.
 .				Prompt for an index to move the window (unused index)
 ;				Move to the previously active pane

 [0-9]		switch to the window under numbered index
 f[win]		switch to the window named win

 s				List all sessions
 w				List all windows

 x				Kill current pane
 &				Kill current window

 f				Prompt to search for a text in open windows
 space		Cycle between layouts

 ?				help


 
 Configuration files:

 	~/.tmux.conf

 

 Procedures

 1. If it is a gap >1 between numbers in the two tmux windows, run `move-window -r' to get them resorted in the proper order and closing the gap.

 2. new-window -a -t <index>				insert a window on the used index moving all the windows forward

 *When new tmux session has been created it can be listed with `(Ctrl+B)+s' command. 

 	(0) + 25: 1 windows (attached)
       /
 session
    name
 
 After creating a new window within the same session with `(Ctrl+B)+c', it can  window can be viewed with `(Ctrl+B)+s':

 	(0) + 25: 2 windows (attached)
            \
						 notice the change

 and `(Ctrl+B)+w' commands:

	window name
       /
 	(0) 0: bash* host
 	(1) 1: vi* host
      \
			 window name 

 To join pane (pane) from the window (window) from the session (session) with the current specify it as source (-s):

 	join-pane -s session:window.pane

 To join current pane to the pane (pane) from the window (window) from the session (session) specify it as target (-t):

 	join-pane -t session:window.pane
