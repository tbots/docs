 
 In tmux, a session is displayed on screen by a client and all sessions are managed by a single server. The server and each client are separate processes 
 which communicate through a socket in /tmp.  

 #{pane_current_path} track current pane path location

 To create a new session:

  tmux new-session -s docker  			# create new session names docker
  tmux new-session -d -s ansible    # create session in detached mode
  tmux new-session -A -s ex       # attach or create session ex; no error if session already exists
  tmux att -d -t <session>  # attach to a session and detatch all the other clients

	
To create a new window:

 tmux new-window -t <session:window> -a -n ssh   

Creating a new window.

Moving windows.
  
To move windows use move-window (alias: movew) command. The syntax is:
	move-window [-ardk] [-s src-window] [-t dst-window]

If it is a gap >1 between numbers in the two tmux windows, run `move-window -r' to get them resorted in the proper order and closing the gap.
		
Splitting windows:

 split-window [-bdhvP] [-c start-directory] [-l size | -p percentage] [-t target-pane] [shell-command] [-F format]
      (alias: splitw)

Create a new pane by splitting target-pane. -h is for horizontal split and -v a vertical split; if neither specified, -v is assumed.

Join pane:

 join-pane
 join-pane -b -t :1 -p 30         # join to the left of or above of the destination pane
                                  # otherwise will upper on the right or bottom
 


 bind   r     source-file ~/.tmux.conf
 bind '"' split-window -v -c "#{pane_current_path}"
 set-option -g status-style bg=black,fg=green
 split-window -v -c ~ -p 40 -t :0 "vim <file>"
 swap-window -s 2 -t 1			
