
1. Virtual Host Support

 IP-based virtual hosting is a method to apply different directives based on the IP address and port a request is received on. Most commonly, this is used
 to serve different websites on different ports and interfaces, or using an ip aliases. With name-based virtual hosting, the server relies on the client to 
 report the hostname as part of the HTTP headers. Using this technique, many different hosts can share the same IP address. Name-based virtual hosting needs
 only DNS server to be configured to map each hostname to the correct IP address and then Apache to recognize different hostnames. Name-based virtual hosting
 builds off of the IP-based virtual host selection algorithm, meaning that searches for the proper server name occur only between virtual hosts that have the
 best IP-based address. Using a wildcard(*) for the IP address in all of the VirtualHost directives makes ip-mapping irrelevant.

 When a request arrives, the server will find the best (most specific) matching <VirtualHost> argument based on the ip address and port used by the request.
 If there is more than one virtual host containing this best match address and port combination, Apache will further compare the ServerName and ServerAlias 
 directives to the server name present in the request. If ServerName directive is omitted from any name-based virtual host, the server will default to a fully
 qualified domain name (FQDN) derived from the system hostname. If no matching ServerName or ServerAlias is found in the set of virtual hosts containing the most
 specific matching IP address and port combination, the the first listed virtual host that matches will be used.

 There are two ways of configuring apache to support multiple hosts. Either by running a separate apache daemon for each hostname, or by running a single daemon
 which supports all the virtual hosts.

 

To enable or disable virtual host use `a2ensite` and `a2dissite` utilities.


 "Options" directive configures what features are available in a particular directory. The syntax is
  
  Options [+|-]option [[+|-]option]...

 The default value is:
  
  Options FollowSymLinks

 Directive applies on server config, virtual host, directory and .htaccess contexts. The "Options" directive
 is part of the core module.

 'option' argument can be set to "None", in which case none of the extrafeatures are available or one of the
 following:

  All       All options except of MultiViews

  ExecCGI   Execution of CGI scripts using mod_cgi is permitted

  FollowSymLinks
            The server will follow symlinks in this directory. This is the default setting

  Includes  Server-side includes provided by mod_include are permitted

  IncludeNOEXEC
            Server-side includes are permitted, but the #exec cmd and #exec cgi are disabled. It is still possible 
            to #include virtualCGI scripts from ScriptAliased directories

  Muliviews 
            Content negotiated "Multiviews" are allowed using mod_negotiation

  SymLinksIfOwnerMatch
            The server will only follow symbolic links for which the target file or directory is owned by the same user 
            id as the link. The FollowSymLinks and SymLinksOwnerMatch Options work only in <Directory> sections or .htaccess files.

  

  
 <Directory {pathspec}>Directory> : server_config, virtual_host

   <Directory /home/*/static>
    Options Indexes FollowSymLinks
   </Directory>

   <Directory ~ "^/www/[0-9]{3}">
   # regexp   ^
   </Directory>
 Directives
 ----------
	LoadModule php7_module modules/libphp7.so
	LoadModule php5_module modules/libphp5.so

	<FilesMatches \.php$>
		SestHandler application/x-httpd-php
	</FilesMatches>

  Include
	DocumentRoot

 <Directory "/var/www/html/localhost">

 	Options Indexes FollowSymlinks
	AllowOverride All
	Order Allow,Deny
 	Allow from All				# controls which hosts can access an area of the server
	Require all granted
	ServerAdmin email-address|URL (Context: server config, virtual host)
			Email address that the server includes in error messages sent to the client. If the apache2 doesn't recognize the supplied argument as an URL, it assumes that it is an email
			address and prepends it with "mailto:" in hyperlink targets. 

	ServerName [scheme://]domain-name|ip-address[:port] (Context: server config, virtual host)
			Sets the request scheme, hostname and port that the server uses to identify itself. ServerName is used (possibly in Conjuction with ServerAlias, to uniquely identify a virtual host, when 
			using name-based virtual hosts. 
