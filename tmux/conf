 
 In tmux, a session is displayed on screen by a client and all sessions are managed by a single server. The server and each client are separate processes which communicate through a 
 socket in /tmp. 

 Usage: 	tmux [-2CluvV] [-c shell-command] [-f file] [-L socket-name] [-S socket-path] [command [flags]]

	-2			Force tmux to assume the terminal supports 256 colours. [PLEASE EXPLORE]

 Commands:

  attach-session [-dEr] [-c working-directory] [-t target-session]          (alias: attach)
    
    If run from outside tmux, create a new client in the current terminal and attach it to targent session. If used from inside, switch the current client. If `-d' is specified,
    any other clients attached to the session are detached.
    
  attach 
		DESCRIBE_ME

  list-session     # same as `tmux ls'
		DESCRIBE_ME

  kill-pane 
		DESCRIBE_ME

  resize-pane [-DLMRUZ] [-t target-pane] [-x width] [-y height] [adjustment]
		DESCRIBE_ME

  join-pane [-bdhv] [-l size |-p percantage] [-s src_pane] [-t dst-pane]		(alias: joinp)
		DESCRIBE_ME

  swap-pane [-dDU][-s src-pane][-t dst-pane] (alias: swapp)
		DESCRIBE_ME

	 swap-window [-d] [-s src-window] [-t dst-window] 												(alias: swapw)
	 	DESCRIBE_ME

	 new-session [-AdDEP] [-c start-directory] [-F format] [-n window-name] [-s session-name] [-t target-session] [-x width] [-y height] [shell-command]
	 	(alias: new)

	 	Create a new session with name session-name. The new session is attached to the current terminal unless -d is given. window-name and shell-command are the name of and shell
	 	command to execute in the initial window. If -d is used, -x and -y specify the size of the initial window (80 by 24 if not given). <<< ???

		If run from a terminal, any termios(4) special characters are saved and used for new windows in the new session. <<< ???

		The -A flag makes new-session behave like attach-session if session-name already exists.


	 kill-window 
	 	DESCRIBE_ME

	 select-layout
	  DESCRIBE_ME


 Creating a new window.

  To create a new window use `new-window` command. The syntax is:
    new-window [-adkP] [-c start-directory] [-F format] [-n window-name] [-t target-window] [command]

  With -a, the new window is inserted at the next index up from the specified target-window, moving windows up if necessary, otherwise target-window is the new window location.

		
 Splitting windows:

	 split-window [-bdhvP] [-c start-directory] [-l size | -p percentage] [-t target-pane] [shell-command] [-F format]
      (alias: splitw)

   Create a new pane by splitting target-pane. -h is for horizontal split and -v a vertical split; if neither specified, -v is assumed.
		DESCRIBE_ME

	 source-file

 
 Configuration file options

   To see all the options: `tmux show-options -g`.
    

   bind
	 set-option

	 allow-rename
   status-bg
   status-fg
   
   status-left
   status-right

   
 Setting options examples:
  
   set status-style bg=black,fg=green
 


 Key bindings

 !				Break the current pane out of the window.
 "				Split the current pane into two, top and bottom.
 %				Split the current pane into two, left and right.

 $				Rename current session.
 ,				Rename the current window.

 '				Prompt for a window index to select.
 .				Prompt for an index to move the window (unused index)
 ;				Move to the previously active pane

 [0-9]		switch to the window under numbered index
 f[win]		switch to the window named win

 s				List all sessions
 w				List all windows

 x				Kill current pane
 &				Kill current window

 f				Prompt to search for a text in open windows
 space		Cycle between layouts

 ?				help


 
 Configuration files:

 	~/.tmux.conf

 

 Procedures

 1. If it is a gap >1 between numbers in the two tmux windows, run `move-window -r' to get them resorted in the proper order and closing the gap.

 2. new-window -a -t <index>				insert a window on the used index moving all the windows forward

 *When new tmux session has been created it can be listed with `(Ctrl+B)+s' command. 

 	(0) + 25: 1 windows (attached)
       /
 session
    name
 
 After creating a new window within the same session with `(Ctrl+B)+c', it can  window can be viewed with `(Ctrl+B)+s':

 	(0) + 25: 2 windows (attached)
            \
						 notice the change

 and `(Ctrl+B)+w' commands:

	window name
       /
 	(0) 0: bash* host
 	(1) 1: vi* host
      \
			 window name 

 To join pane (pane) from the window (window) from the session (session) with the current specify it as source (-s):

 	join-pane -s session:window.pane

 To join current pane to the pane (pane) from the window (window) from the session (session) specify it as target (-t):

 	join-pane -t session:window.pane
