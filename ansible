
	Files:
		/etc/ansible/hosts
 	
	Command exmaples:
		
		ansible all -m command -u user -b --become-user user
		ansible localhost -m ping -e 'ansyble-python-interpreter=/usr/bin/python'
		ansible --list-hosts <pattern>

		-m,--module-name		module name
		-a,--args						module arguments
		-u,--user   				remote user
		-b,--become					run operations with become (does not imply password prompting)
		--become-user				run operations as this user (default=root)
		-e,--extra-vars			set additional variables as key=value or YAML/JSON
		-i,--inventory-file	specify inventory host path (default=/etc/ansible/hosts) or comma-separated host
		-f,--forks FORKS		specify number of parallel processes to use (default=5)

		ansible [HOST]

		HOST can be a group name, individual host or all keyword.


	/etc/ansible/hosts file syntax examples


	 [group_name]
	 host[:port]

	 [range_start:range_end]

	 localhost              ansible_connection=local
	 other1.example.com     ansible_connection=ssh        ansible_user=mpdehaan
	 host1 http_port=80 maxRequestsPerChild=808

	 Group variables

	 [atlanta]
	 server1
	 server2
	 
	 [berlin]
	 b1
	 b2

	 [atlanta:vars]
	 ansible_connection=local
	 ansible_user=root
	 http_port=80
	 maxRequestsPerChild=808]
	 ntp_server=ntp.atlanta.example.com
	 proxy=proxy.atlanta.example.com

	 [all:children]
	 atlanta
	 berlin

	 [all:vars]
	 some_server=server1	DEFINE
	 halon_system_timeout=30
	 self_destruct_countdown=60
	 escape_pods=2


 Copy files:
 	-m copy -a 'src=/src dest=/dest'

 Change file permissions:

	-m file -a 'dest=/dest mode=600 owner= group'
	-m file -a 'dest=/dir state=absent'

	state			directory	//create directory

	Modules:
		
		yum
		apt
		user
		file
		git
		ping
		service
		webservers

	Limited background operations

	ansible-galaxy 

	Playbooks:
		
		Hosts and Users
			
			hosts		a list of one or more groups or host patterns, separated by colons
			remote_user			name of the user account
			order		

		The things listed in the notify section of a task are called handlers. Note 'listen' attribute.

	All or * are equivalent	

	group:second_group
	group:!second_group

	group:second_group:&third_group:!fourh_group
		
		all machines from the group and second_group are to be managed if in third group but not in fourh_group

	group[-1] group[1:] 

	~extended_regexp

	--limit string
	@ assumes filename
