!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ATOM_MAX	defs.h	29;"	d
CC	Makefile	/^CC=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS=-Wall -I.$/;"	m
DATA_FILE	examples/test/read_line.c	16;"	d	file:
DOES_NOT_MATCH	defs.h	21;"	d
DOES_NOT_REQUESTED	defs.h	22;"	d
FULL_MATCH	defs.h	28;"	d
LINE_END	defs.h	26;"	d
LINE_END	headers/defs.h	11;"	d
LINE_START	defs.h	25;"	d
LINE_START	headers/defs.h	10;"	d
LSH_RL_BUFSIZE	examples/lsh_read_line.c	3;"	d	file:
MATCH	defs.h	20;"	d
PART_MATCH	defs.h	27;"	d
REQUESTED_AND_MATCHED	defs.h	23;"	d
REQUESTED_BUT_DOES_NOT_MATCH	defs.h	24;"	d
a	0.1D.c	/^struct atoms   a	= {0};			\/* atoms *\/$/;"	v	typeref:struct:atoms
a	examples/test/ptr_arr.c	/^struct atoms a;$/;"	v	typeref:struct:atoms
anch	anchors.c	/^int anch() {$/;"	f
anchor	defs.h	/^	char anchor;			\/* ^ $ \\< \\> *\/$/;"	m	struct:mtchfl
atom_clear	atoms.c	/^void atom_clear(char **atom) {$/;"	f
atom_complete	defs.h	/^	int atom_complete;			\/* closing bracket encountered *\/$/;"	m	struct:atoms
atom_complete	examples/test/ptr_arr.c	/^	int atom_complete;$/;"	m	struct:atoms	file:
atom_index	defs.h	/^	int atom_index;					\/* backreference index *\/$/;"	m	struct:atoms
atom_index	examples/test/ptr_arr.c	/^	int atom_index;$/;"	m	struct:atoms	file:
atom_new	defs.h	/^	int atom_new;						\/* new open bracket found *\/$/;"	m	struct:atoms
atom_new	examples/test/ptr_arr.c	/^	int atom_new;$/;"	m	struct:atoms	file:
atom_print	atoms.c	/^void atom_print(char **atom) {$/;"	f
atom_print	examples/test/ptr_arr.c	/^void atom_print(char **atom) {$/;"	f
atom_print_wi	atoms.c	/^void atom_print_wi(char **atom) {$/;"	f
atom_wr	atoms.c	/^void atom_wr(char **atom) {$/;"	f
atom_wr	examples/test/ptr_arr.c	/^int atom_wr(char **atom) {$/;"	f
atoms	defs.h	/^struct atoms {$/;"	s
atoms	examples/test/ptr_arr.c	/^struct atoms {$/;"	s	file:
c	defs.h	/^	char 	c;		\/* current *\/$/;"	m	struct:char_st
c	func/rcs/rcs.c	/^	char 	c;		$/;"	m	struct:char_st	file:
c	func/rcs/struct.c	/^	char 	c;		$/;"	m	struct:char_st	file:
ch	examples/test/ptr_arr.c	/^	char ch;$/;"	m	struct:atoms	file:
char_st	defs.h	/^struct char_st { $/;"	s
char_st	func/rcs/rcs.c	/^struct char_st { $/;"	s	file:
char_st	func/rcs/struct.c	/^struct char_st { $/;"	s	file:
crstat	crstat.c	/^int crstat(int fd,int start,int end,int np,int idx) {$/;"	f
cs	0.1D.c	/^struct char_st cs = {0};				\/* initialize with 0 *\/$/;"	v	typeref:struct:char_st
cs	func/rcs/rcs.c	/^struct char_st cs = {0};$/;"	v	typeref:struct:char_st
cs	func/rcs/struct.c	/^struct char_st cs = {0};$/;"	v	typeref:struct:char_st
debug	0.1D.c	/^int debug					=  0;$/;"	v
display_used_color	examples/colors.c	/^void display_used_color$/;"	f
ec_malloc	ec_malloc.c	/^void *ec_malloc(unsigned int size) {$/;"	f
ec_malloc	examples/lsh_read_line.c	/^void *ec_malloc(unsigned int size) {$/;"	f
eof	crstat.c	/^int eof(int fd) {$/;"	f
eof	func/eof/eof.c	/^int eof(int fd) {$/;"	f
eol	crstat.c	/^int eol(int fd) {$/;"	f
errnonm	func/errnonm/errnonm.c	/^char *errnonm(int value) {$/;"	f
errnonm_r	func/errnonm_r/errnonm_r.c	/^char *errnonm_r(char *buf,int value) {$/;"	f
exch	func/exch/exch.c	/^int exch(int fd) {$/;"	f
f	defs.h	/^	char 	f;		\/* following *\/$/;"	m	struct:char_st
f	func/rcs/rcs.c	/^	char 	f;		$/;"	m	struct:char_st	file:
f	func/rcs/struct.c	/^	char 	f;		$/;"	m	struct:char_st	file:
first_in_word	anchors.c	/^int first_in_word() {$/;"	f
first_on_line	anchors.c	/^int first_on_line() {$/;"	f
fl	0.1D.c	/^struct mtchfl fl 	= {0};				\/* fl structure created here *\/$/;"	v	typeref:struct:mtchfl
ftl	examples/lsh_read_line.c	/^void ftl(char *msg) {$/;"	f
ftl	ftl.c	/^void ftl(char *msg) {$/;"	f
ftl	func/rcs/ftl.h	/^void ftl(char *msg) {$/;"	f
full_match	defs.h	/^	int  full_match;$/;"	m	struct:scheme
ii	examples/test/int.c	/^void ii(int x[]){$/;"	f
indent	func/indent/indent.c	/^void indent(char *string) {$/;"	f
intarr	examples/test/int.c	/^void intarr(int x[]){$/;"	f
intarr1	examples/test/int.c	/^void intarr1(int x[],int c){$/;"	f
isupper_str	func/isuppers/isuppers.c	/^int isupper_str(char s[]) {$/;"	f
last_in_word	anchors.c	/^int last_in_word() {$/;"	f
last_in_word	examples/test/last_in_word.c	/^int last_in_word(struct char_st cs) {$/;"	f
last_on_line	anchors.c	/^int last_on_line() {$/;"	f
li	defs.h	/^	int li;									\/* last index in wi; start from index of 0 *\/$/;"	m	struct:atoms
li	examples/test/lii.c	/^int li(int x[]) {$/;"	f
li	examples/test/ptr_arr.c	/^	int li;								\/* last index *\/$/;"	m	struct:atoms	file:
lsh_read_line	examples/lsh_read_line.c	/^char *lsh_read_line(void)$/;"	f
lst	crstat.c	/^int lst(int fd) {$/;"	f
lst_o	crstat.c	/^int lst_o(int fd) {$/;"	f
lst_o	lst_o.c	/^int lst_o(int fd) { return lseek(fd,0,SEEK_CUR) - lst(fd); }$/;"	f
lst_or	crstat.c	/^int lst_or(int fd,int ro) {		\/\/ lst_ro$/;"	f
main	0.1D.c	/^int main(int argc,char *argv[]) {$/;"	f
main	color.c	/^int main() {$/;"	f
main	examples/colors.c	/^int main() {$/;"	f
main	examples/fgetc.c	/^int main() {$/;"	f
main	examples/lsh_read_line.c	/^int main() {$/;"	f
main	examples/range.c	/^int main() {$/;"	f
main	examples/strncpy.c	/^int main() {$/;"	f
main	examples/test/col.c	/^int main() {$/;"	f
main	examples/test/colors.c	/^int main() {$/;"	f
main	examples/test/ctypes.c	/^int main(int argc,char **argv) {	$/;"	f
main	examples/test/int.c	/^int main(int argc,char **argv){$/;"	f
main	examples/test/line.c	/^int main() {$/;"	f
main	examples/test/np.c	/^int main(int argc,char **argv) {$/;"	f
main	examples/test/read_line.c	/^int main(int argc,char **argv) {$/;"	f
main	examples/test/test.c	/^int main(){$/;"	f
main	func/make/main.c	/^int main() {$/;"	f
main	func/rcs/rcs.c	/^int main() {$/;"	f
main	func/rcs/struct.c	/^int main() {$/;"	f
main	func/rcs/time_example.c	/^int main() {$/;"	f
main	main.c	/^int main(int argc,char **argv) {$/;"	f
main	print.c	/^int main() {$/;"	f
main	redraw.c	/^int main() {$/;"	f
main	test.c	/^int main() {$/;"	f
match	0.1D.c	/^int match(char *exp,int ps)$/;"	f
mtchfl	defs.h	/^struct mtchfl {$/;"	s
nl_cnt	func/nl_cnt/nl_cnt.c	/^int nl_cnt(int fd) {$/;"	f
non_prt	defs.h	/^	int  non_prt;$/;"	m	struct:scheme
np	defs.h	/^	int np;						\/* next pattern *\/$/;"	m	struct:mtchfl
null	examples/vis1.h	/^void null(char *s) {$/;"	f
null	func/null/null.c	/^int null(char *s) {$/;"	f
p	defs.h	/^	char 	p;		\/* previous *\/$/;"	m	struct:char_st
p	func/rcs/rcs.c	/^	char 	p;$/;"	m	struct:char_st	file:
p	func/rcs/struct.c	/^	char 	p;$/;"	m	struct:char_st	file:
print_hello	func/make/print.c	/^void print_hello(){$/;"	f
printable	func/printable/printable.c	/^void printable(char c,int non_prnt) {$/;"	f
printable_e	crstat.c	/^void printable_e(char c, int np) {$/;"	f
program_name	0.1D.c	/^const char *program_name;$/;"	v
program_name	main.c	/^const char *program_name;$/;"	v
rcs	0.1D.c	/^int rcs(int fd) {$/;"	f
rcs	func/rcs/rcs.c	/^int rcs(int fd) {$/;"	f
re_fdb	0.1D.c	/^int re_fdb(int fd,char *pattern,struct scheme fmt,int ms) {$/;"	f
redraw	crstat.c	/^void redraw(int fd,char *word, int non_prt) {$/;"	f
repeat_pattern_match	defs.h	/^	int  repeat_pattern_match;			\/* repeat pattern  *\/$/;"	m	struct:mtchfl
repetition_modifier	defs.h	/^	char repetition_modifier;				\/* repeatition character *\/$/;"	m	struct:mtchfl
replace_char	repace_char.c	/^int replace_char(char *atoms[],int fd,int st) {$/;"	f
scheme	defs.h	/^struct scheme {$/;"	s
sec	examples/test/line.c	/^void sec(){$/;"	f
seek	func/seek/seek.c	/^int seek(int fd,char brk) {$/;"	f
seek_nl	func/seek_nl/seek_nl.c	/^int seek_nl(int fd) {$/;"	f
sstr	func/sstr/sstr.c	/^int sstr(char *s,int i) {$/;"	f
step	0.1D.c	/^void step(int fd, struct scheme fmt, int match, char *part)$/;"	f
str_h	index.c	/^void str_h(char *s, int pos, int np) {$/;"	f
usage	0.1D.c	/^void usage(FILE* stream,int exit_code) {$/;"	f
usage	examples/test/np.c	/^void usage(FILE*stream,int exit_code) {$/;"	f
usage	main.c	/^void usage(FILE *stream,int exit_code) {$/;"	f
usage	scripts/debug.sh	/^function usage() {$/;"	f
visual	examples/vis1.h	/^int visual(char *s,int index) $/;"	f
vscs	index.c	/^void vscs(struct char_st cs) {$/;"	f
vsexp	index.c	/^void vsexp(char *exp,$/;"	f
vsps	index.c	/^void vsps(char *e, int ps) {$/;"	f
vsrd	func/vsrd/vsrd.c	/^int vsrd(int fd,int start,int bcnt,char brk) {$/;"	f
wi	defs.h	/^	int wi[100];						\/* array of inexes in atoms[] to be written *\/$/;"	m	struct:atoms
wi	examples/test/ptr_arr.c	/^	int wi[100];						\/* write indexies *\/$/;"	m	struct:atoms	file:
