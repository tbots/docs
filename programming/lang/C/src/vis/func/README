
 Error-check wrapper functions:

 	ec_malloc();
															Returns pointer to the allocated memory location returned by call to malloc() or NULL on error.
															ftl() function handles an error. 

	ftl(char *msg);
															Calls perror(3) with the error message msg to be printed before an error explained. Exit with exit code of
															1 (EXIT_FAILURE).


 Read offset manipulation functions (wrap to a library).

 	int crstat(int fd,int start,char end,int nprt,int ft);	
															Prints characters starting at offset of start till the offset of end from the file pointed by
															the fd file descriptor. If ft is 1 read offset is printed along to the character. If nprt is
															set to 1, non-printable characters will attempt to be visualised.

	void printable_e(char c,int non_prnt);
															Print character to the stdout. Provides visual representation of the whitespace characters if non_prnt 
															option is set to 1. In case of new line character no new is printed and should be handled separately. Designed in
															conjuction with crstat() function that printing of the new line depends on the value of the dpi.


 Computation of the file offset:
 	lst();

	int eol(int fd);
															Return offset of the end of the line on which cursor is positioned on.


 Character position:
	
	fiw();
															Return one if character read is first in word.

 What about to create a library for the offset visualisation?
