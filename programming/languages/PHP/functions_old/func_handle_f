 For each of the functions, make an example and purge this files:

 Funtcions that apply to functions

 func_num_args()        - returns number of arguments passed to the function
 func_get_args()        - returns an array comprising a function's argument list
 function_exists()      - return true if the given argument was defined
 int count()            - count all elements in array, or something is onbject
 array str_split()      - convert string into array by splitting it each N element
 array preg_split()     - split string by a regular expression
 call_user_func()       - 
 create_function();

 int count ( mixed $array_or_countable [, int $mode = COUNT_NORMAL] )

 array str_split( string $string [, int $split_length = 1] )	- converts a string into array

 array preg_split( string $pattern, string $subject [, int $limit = -1 [, int $flags = 0 ]] )
 								split the given string by a regular expression

								limit  if specified, the only substring up to limit are returned with the rest of the string being placed in the
								last substring. A limit of -1 or 0 means "no limit" and, as is standard across PHP, NULL can be used to skip to the
								flags  parameter.

 		
	create_function();

 int count ( mixed $array_or_countable [, int $mode = COUNT_NORMAL] )

 array str_split( string $string [, int $split_length = 1] )	- converts a string into array

 array preg_split( string $pattern, string $subject [, int $limit = -1 [, int $flags = 0 ]] )
 								split the given string by a regular expression

								limit  if specified, the only substring up to limit are returned with the rest of the string being placed in the
								last substring. A limit of -1 or 0 means "no limit" and, as is standard across PHP, NULL can be used to skip to the
								flags  parameter.

 get_class();

 Variable type functions:

	is_array();
	is_float(),is_double(),is_real()
	is_long(),is_int(),is_integer()
	is_string();
	is_bool();
	is_object();
	is_resource();
	is_null();
	is_scalar();		// integer/boolean/string/float
	is_numeric();
	is_callable();	// checks for the validity of function name

	isset();


	intval();
	call_user_func();
	create_function();
