

 OPTIND		Holds the index to the next argument to be processed. This is how getopts "remembers" its own status between
					invocations. Also useful to shift the positional parameters after processing with getopts. OPTIND is initially
					set to 1, and need to be re-set to 1 if you want to parse anything again with getopts

 OPTARG		This variable is set to any argument for an option found by getopts. It also contains the option flag of an
				unknown option.
 							
 OPTERR		(Values 0 or 1) indicates if Bash should display error messages generated by the getopts builtin. The value is
				initialized to 1 on every shell startup.



 	getopts OPTSTRING VARNAME [ARGS...]


 OPTSTRING	tells getopts which options to expect and where to expect arguments

 VARNAME		tells getopts which shell-variable to use for option reporting

 ARGS			tells getopts to parse these optional words instead of positional parameters


 The option-string

  The option-string tells getopts which options to expect and which of them must have an argument. The syntax is very simple -
  every option character is simply names as is.

  If there is a : (colon) after the proper option flag, option will expect the argument.

  If : (colon) found at the beginning of the optstring, getopts switches to "silent error reporting mode".

 
 Custom arguments to parse

  The getopts utility parses the positional parameters of the current shell or function by default (which means it parses
  "$@").

  You can give your own set of arguments to the utility to parse. Whenever additional arguments are given after the VARNAME
  parameter, getopts doesn't try to parse the positional parameters, but these given words.

  This way, you are able to parse any option set you like, here for example from an array:

  		while getopts :f:h opt "${MY_OWN_SET[@]}"; do
			...
		done
  
  A call to getopts without these additional arguments is equivalent to explicitly calling it with "$@".

  		getopts ... "$@"

  
 Error Reporting

  Regarding error-reporting, there are two modes getopts can run in:

  		- verbose mode
				
				invalid option		
							VARNAME is set to ? (question mark) and OPTARG is unset

				required argument not found
							VARNAME is set to ? (question mark), OPTARG is unset and an error message is printed

		- silent mode
				
				invalid option
							VARNAME is set to ? (question mark) and OPTARG is set the (invalid) option character

				required argument is not found
							VARNAME is set to : (colon) and OPTARG contains the option in question

