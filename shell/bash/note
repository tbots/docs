

 A shell is a macro processor that executes commands. The term macro processor means functionality where text and symbols are expanded to create
 larger expressions. 

 A Unix shell is both a command interpreter and a programming language. As a command interpreter, the shell provides the user interface to the
 rich set of GNU utilities. The programming language features allow these utilities to be combined. Files containing commands can be created, and
 become commands themselves. These new commands have the same status as system commands in directories sush as /bin, allowing users or group to
 establish custom environments to automate their common tasks.

 Interactive or login shell, startup files:

 	/etc/profile			# include /etc/bash.bashrc and /etc/profile.d
	~/.bash_profile, ~/.bash_login, ~/.profile 		# the first found is read
	~/.bash_logout

	/etc/bash.bashrc includes /etc/debian_chroot
	~/.profile sources ~/.bashrc


 Non-login shell startup files:

 	~/.bashrc

 ARRAYS 
	Array declaration.
		
		declare -a ARRAY

	Retrieving array length..

		${#ARRAY[@]}						expands to the number of the elements in array

 	Array assignment.

		declare -a ARRAY=( "one" "two")

	To dereference ARRAY:

		var=ARRAY
									only first element

		var=${ARRAY[@]}
									all array elements


 SCALARS

 		${#var}
									get varible character length


 Shortcuts:

 	<Alt>+<C> 							capitalize the character under cursor and jump to the end of the word
	<Alt>+<R>								revert changes done on the whole line
	<Ctrl>+<_>							undo
	Ctrl>+<O>							execute command found by the `Ctrl+R'

 
 Computation.

  (( ... )) construct should be prefixed by '$' when used within command.


 Builtin variables:

 	$BASH
					The path to bash binary itself

	$BASH_ENV

					The environmental variable pointing to a Bash startup file to read when a script is invoked

	$BASH_SUBSHELL

					A variable indicating the subshell level.
	
	$BASHPID

					Process ID of the current instance of Bash. This is not the same as $$ variable, that returns PID of
					the parent process

					echo "\$\$ outside of subshell = $$"                              # 9602
					echo "\$BASH_SUBSHELL  outside of subshell = $BASH_SUBSHELL"      # 0
					echo "\$BASHPID outside of subshell = $BASHPID"                   # 9602

					echo

					( echo "\$\$ inside of subshell = $$"                             # 9602
					  echo "\$BASH_SUBSHELL inside of subshell = $BASH_SUBSHELL"      # 1
					  echo "\$BASHPID inside of subshell = $BASHPID" )                # 9603
	
	$BASH_VERSINFO[n]

					A 6-element array containing version information about the installed release of Bash.

	$BASH_VERSION

					The version of Bash installed on the system.

	$CDPATH
					
					A colon-separated list of search path available for the CD command.


 SHOPT BUILTIN
 
 	shopt -s extglob



 Working with variables:
  
  To list all the exported variables:
   
  $ export -p
